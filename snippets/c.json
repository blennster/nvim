{
  "SVEP C header file": {
    "prefix": "svheader",
    "body": [
      "#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H__",
      "#define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H__",
      "",
      "/**",
      "*  @file ${TM_FILENAME}",
      "*  @brief $1",
      "* ",
      "*  @copyright Copyright Svep Design Center AB ${CURRENT_YEAR}",
      "*/",
      "",
      "/**** Includes ****/",
      "",
      "/**** Defines ****/",
      "",
      "/**** Types ****/",
      "",
      "/**** Data ****/",
      "",
      "/**** Public functions ****/",
      "",
      "#endif",
      ""
    ],
    "description": "SVEP C header file"
  },
  "SVEP C file": {
    "prefix": "svcfile",
    "body": [
      "/**",
      "*  @file ${TM_FILENAME}",
      "*  @brief $1",
      "* ",
      "*  @copyright Copyright Svep Design Center AB ${CURRENT_YEAR}",
      "*/",
      "",
      "/**** Includes ****/",
      "",
      "#include \"${TM_FILENAME_BASE}.h\"",
      "",
      "/**** Defines ****/",
      "",
      "/**** Types ****/",
      "",
      "/**** Data ****/",
      "",
      "/**** Public functions ****/",
      "",
      "/**** Private functions ****/",
      ""
    ],
    "description": "SVEP C file"
  },
  "minmax macros": {
    "prefix": "minmax",
    "body": [
      "#define MIN(a, b) \\",
      "    (((a) < (b)) ? (a) : (b))",
      "",
      "#define MAX(a, b) \\",
      "    (((a) > (b)) ? (a) : (b))"
    ],
    "description": "Generate MIN and MAX macros"
  },
  "minmax macros (type-safe)": {
    "prefix": "minmax_type",
    "body": [
      "#define MIN(a,b) ({ \\",
      "    typeof(a) _a = (a); \\",
      "    typeof(b) _b = (b); \\",
      "    _a < _b ? _a : _b; \\",
      "})",
      "",
      "#define MAX(a,b) ({ \\",
      "    typeof(a) _a = (a); \\",
      "    typeof(b) _b = (b); \\",
      "    _a > _b ? _a : _b; \\",
      "})"
    ],
    "description": "Type-safe MIN/MAX using GCC typeof"
  }
}
